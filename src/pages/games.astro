---
import { Cloudinary } from "@cloudinary/url-gen";
import Layout from "@layouts/Layout.astro";
import { GET } from "./api/steam";
import { InfiniteMovingCardsTwoWeeks } from "@components/InfiniteSteamCardsTwoWeeks";
import { InfiniteMovingCardsAll } from "@components/InfiniteSteamCardsAll";
import Footer from "@components/Footer";
import Credits from "@components/Credits.astro";
import Header from "@components/Header.astro";

const cld = new Cloudinary({
  cloud: {
    cloudName: "dtqhs8nvm",
  },
});

function shuffle(array: Array<any>) {
  let currentIndex = array.length,
    randomIndex;
  while (currentIndex > 0) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex--;
    [array[currentIndex], array[randomIndex]] = [
      array[randomIndex],
      array[currentIndex],
    ];
  }

  return array;
}

type Game = {
  appid: number;
  name: string;
  game_image_url: string;
  playtime_2weeks: number;
  playtime_forever: number;
};

interface SteamGames {
  all: {
    response: {
      game_count: number;
      games: Array<Game>;
    };
  };
  recent: {
    response: {
      game_count: number;
      games: Array<Game>;
    };
  };
}

const response = await GET(Astro);
const steamGames = (await response.json()) as SteamGames;

steamGames.all.response.games.forEach((game) => {
  const cldSrc = cld
    .image(
      `https://steamcdn-a.akamaihd.net/steam/apps/${game.appid}/library_600x900_2x.jpg`,
    )
    .setDeliveryType("fetch")
    .format("webp");

  game.game_image_url = cldSrc.toURL();
});

steamGames.recent.response.games.forEach((game) => {
  const cldSrc = cld
    .image(
      `https://steamcdn-a.akamaihd.net/steam/apps/${game.appid}/library_600x900_2x.jpg`,
    )
    .setDeliveryType("fetch")
    .format("webp");

  game.game_image_url = cldSrc.toURL();
});
---

<Layout title="rcn.sh â€¢ Games" image="https://rcn.sh/api/og.png?title=Games">
  <main
    class="text-[#c5c0b8] h-[100dvh] min-h-[100dvh] w-[100dvw] overflow-x-hidden py-8 flex flex-col"
    transition:animate="fade"
  >
    <Header />
    <section class="flex justify-center flex-col mx-2 mt-8">
      <h1
        class="text-[#cdc8c2] text-xl lg:text-3xl md:text-2xl justify-center flex font-mono mx-4"
      >
        My Steam Games
      </h1>
      <InfiniteMovingCardsAll
        items={shuffle(
          steamGames.all.response.games
            .filter((game) => game.appid !== 400040 && game.appid !== 431960)
            .filter((game) => game.playtime_forever > 0)
            .sort((a, b) => b.playtime_forever - a.playtime_forever)
            .slice(0, 20),
        )}
        speed="slow"
        client:load
        className="w-full"
      >
        />
      </InfiniteMovingCardsAll>
      <section class="flex justify-center flex-col mx-2 mt-8">
        <h1
          class="text-[#cdc8c2] text-xl lg:text-3xl md:text-2xl justify-center flex font-mono text-center"
        >
          Recently Played Steam Games
        </h1>
        <InfiniteMovingCardsTwoWeeks
          items={shuffle(
            steamGames.recent.response.games.filter(
              (game) => game.appid !== 400040 && game.appid !== 431960,
            ),
          )}
          speed="normal"
          className="w-full"
          client:load
        />
      </section>
    </section>
    <div class="mt-auto">
      <Footer client:only="react">
        <Credits />
      </Footer>
    </div>
  </main>
</Layout>
